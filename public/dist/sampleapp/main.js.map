{"version":3,"sources":["./src/app/external/add/add.component.ts","./src/app/external/add/add.component.html","./src/app/external/external.module.ts","./src/environments/environment.ts","./src/app/sample.service.ts","./src/app/external/layouts/layouts.component.ts","./src/app/external/layouts/layouts.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/external/list/list.component.ts","./src/app/external/list/list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h2>Vertical (basic) form</h2>\n    <form action=\"/action_page.php\">\n      <div class=\"form-group\">\n        <label for=\"email\">name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter email\" name=\"name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">Age:</label>\n        <input type=\"test\" class=\"form-control\" id=\"age\" placeholder=\"Enter password\" name=\"age\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">Photo:</label>\n        <input type=\"file\" class=\"form-control\" id=\"photo\"  name=\"photp\">\n      </div>\n      \n      <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n    </form>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutsComponent } from '../external/layouts/layouts.component';\nimport { AddComponent } from './add/add.component';\nimport { ListComponent } from './list/list.component';\n\n\n\n@NgModule({\n  declarations: [\n    LayoutsComponent,\n    AddComponent,\n    ListComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports:[LayoutsComponent,AddComponent]\n})\nexport class ExternalModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport{List} from'./models/List';\nimport {Observable} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SampleService {\n\n  constructor(private http:HttpClient) { }\n   public getList(): Observable<List>{\n     const url ='http://localhost:8000/api/v1/sample/'\n     return this.http.get<List>(url)\n   }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layouts',\n  templateUrl: './layouts.component.html',\n  styleUrls: ['./layouts.component.css']\n})\nexport class LayoutsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"#\">Laravel With Angular</a>\n      </div>\n      <ul class=\"nav navbar-nav\">\n        <li class=\"active\"><a href=\"add/\">Add</a></li>\n        <li><a href=\"list/\">List</a></li>\n        <li><a href=\"#\">Page 2</a></li>\n        <li><a href=\"#\">Page 3</a></li>\n      </ul>\n    </div>\n  </nav>\n    \n  \n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sampleapp';\n}\n","<app-layouts></app-layouts>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ExternalModule} from './external/external.module';\nimport {HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ExternalModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {List} from \"../../models/List\";\nimport {SampleService} from '../../sample.service';\n//import {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n   list = new Array<List>();\n   data:any =[];\n  constructor(private http:SampleService) { }\n\n  ngOnInit(): void {\n    this.http.getList().subscribe((data)=>{\n      console.log(data);\n      this.data =  data;\n    });\n  }\n\n}\n","<div class=\"container\">\n    <h2>List Example</h2>\n   \n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Firstname</th>\n          <th>Lastname</th>\n          <th>Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Default</td>\n          <td>Defaultson</td>\n          <td>def@somemail.com</td>\n        </tr>      \n        <!-- <tr class=\"success\">\n          <td>Success</td>\n          <td>Doe</td>\n          <td>john@example.com</td>\n        </tr> -->\n        <!-- <tr class=\"danger\">\n          <td>Danger</td>\n          <td>Moe</td>\n          <td>mary@example.com</td>\n        </tr>\n        <tr class=\"info\">\n          <td>Info</td>\n          <td>Dooley</td>\n          <td>july@example.com</td>\n        </tr>\n        <tr class=\"warning\">\n          <td>Warning</td>\n          <td>Refs</td>\n          <td>bo@example.com</td>\n        </tr>\n        <tr class=\"active\">\n          <td>Active</td>\n          <td>Activeson</td>\n          <td>act@example.com</td>\n        </tr> -->\n      </tbody>\n    </table>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AddComponent} from './external/add/add.component';\nimport {ListComponent} from './external/list/list.component';\n\nconst routes: Routes = [{\n  path:'add',component:AddComponent\n  \n},{\n  path:'list',component:ListComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}